(say "1..2")
(define num 1)
(define debug-enabled 0)
(macro debug
    (_ msg)
    (if debug-enabled `msg 1))
(define called 0)
(let ((ok (lambda (cond msg) (say (if cond 'ok ' 'nok ') num ' # ' msg)(define num (+ num 1)))))
    (ok 1 "parsed the macro, and still alive")
    (debug (define called 1))
    (ok (= called 0) "deferred evaluation")
    (define debug-enabled 1)
    (debug (define called 1))
    (ok (= called 1) "deferred evaluation")
)
